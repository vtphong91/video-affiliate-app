import { NextRequest, NextResponse } from 'next/server';
import { formatFacebookPost } from '@/lib/apis/facebook';

export const dynamic = 'force-dynamic';

export async function GET(request: NextRequest) {
  try {
    console.log('üîç Test formatFacebookPost API called');
    
    // Test data v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
    const testData = {
      title: '[QU·∫†T TU·∫¶N HO√ÄN KH√îNG KH√ç - ENF156IVY] GI√ì M√ÅT TU·∫¶N HO√ÄN, THO√ÅNG ƒê√ÉNG KH√îNG GIAN',
      summary: 'Qu·∫°t tu·∫ßn ho√†n kh√¥ng kh√≠ LocknLock ENF156IVY v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i, ti·∫øt ki·ªám ƒëi·ªán nƒÉng v√† t·∫°o lu·ªìng gi√≥ m√°t m·∫ª cho kh√¥ng gian s·ªëng.',
      pros: [
        'Thi·∫øt k·∫ø hi·ªán ƒë·∫°i, sang tr·ªçng',
        'Ti·∫øt ki·ªám ƒëi·ªán nƒÉng hi·ªáu qu·∫£',
        'T·∫°o lu·ªìng gi√≥ m√°t m·∫ª, tho√°ng ƒë√£ng',
        'D·ªÖ d√†ng v·ªá sinh v√† b·∫£o tr√¨',
        'Ho·∫°t ƒë·ªông √™m √°i, kh√¥ng g√¢y ti·∫øng ·ªìn'
      ],
      cons: [
        'Gi√° th√†nh kh√° cao so v·ªõi c√°c s·∫£n ph·∫©m c√πng lo·∫°i',
        'C·∫ßn kh√¥ng gian ƒë·ªß r·ªông ƒë·ªÉ ƒë·∫∑t m√°y'
      ],
      targetAudience: [
        'Gia ƒë√¨nh c√≥ tr·∫ª nh·ªè',
        'Ng∆∞·ªùi cao tu·ªïi',
        'Ng∆∞·ªùi l√†m vi·ªác t·∫°i nh√†',
        'Ng∆∞·ªùi quan t√¢m ƒë·∫øn ch·∫•t l∆∞·ª£ng kh√¥ng kh√≠'
      ],
      keywords: [
        'qu·∫°t tu·∫ßn ho√†n',
        'locknlock',
        'kh√¥ng kh√≠',
        'ti·∫øt ki·ªám ƒëi·ªán',
        'gia ƒë√¨nh',
        'vƒÉn ph√≤ng',
        'hi·ªán ƒë·∫°i'
      ],
      videoUrl: 'https://youtube.com/watch?v=xFSbSF1n_rk',
      channelName: 'Dealaz VN',
      landingUrl: 'http://localhost:3000/review/quat-tuan-hoan-khong-khi-enf156ivy',
      affiliateLinks: [
        {
          platform: 'SHOPEE MALL',
          price: '920.000',
          url: 'https://shorten.asia/D9u33yDr'
        },
        {
          platform: 'TIKI TRADING', 
          price: '1.539.000',
          url: 'https://shorten.asia/GBVjvr2t'
        }
      ]
    };
    
    // Test formatFacebookPost
    const formattedMessage = formatFacebookPost(testData);
    
    console.log('üìù Formatted message:', formattedMessage);
    
    return NextResponse.json({
      success: true,
      data: {
        testData,
        formattedMessage,
        messageLength: formattedMessage.length,
        linesCount: formattedMessage.split('\n').length
      }
    });
    
  } catch (error) {
    console.error('‚ùå Error in test formatFacebookPost API:', error);
    return NextResponse.json({
      success: false,
      error: 'Failed to test formatFacebookPost',
      details: error
    }, { status: 500 });
  }
}


