import { NextResponse } from 'next/server';
import { formatFacebookPost } from '@/lib/apis/facebook';

export const dynamic = 'force-dynamic';

// GET /api/test-new-copyright - Test new copyright format
export async function GET() {
  try {
    console.log('üîç Testing new copyright format...');
    
    // Test data
    const testData = {
      title: '[QU·∫†T TU·∫¶N HO√ÄN KH√îNG KH√ç - ENF156IVY] GI√ì M√ÅT TU·∫¶N HO√ÄN, THO√ÅNG ƒê√ÉNG KH√îNG GIAN',
      summary: 'ƒê√°nh gi√° chi ti·∫øt v·ªÅ s·∫£n ph·∫©m qu·∫°t tu·∫ßn ho√†n kh√¥ng kh√≠ LocknLock ENF156IVY',
      pros: [
        'Thi·∫øt k·∫ø hi·ªán ƒë·∫°i, sang tr·ªçng',
        'C√¥ng ngh·ªá tu·∫ßn ho√†n kh√¥ng kh√≠ ti√™n ti·∫øn',
        'Ti·∫øt ki·ªám ƒëi·ªán nƒÉng',
        'D·ªÖ d√†ng v·ªá sinh v√† b·∫£o tr√¨'
      ],
      cons: [
        'Gi√° th√†nh kh√° cao',
        'C·∫ßn kh√¥ng gian r·ªông ƒë·ªÉ ƒë·∫∑t'
      ],
      targetAudience: [
        'Gia ƒë√¨nh c√≥ tr·∫ª nh·ªè',
        'Ng∆∞·ªùi quan t√¢m ƒë·∫øn ch·∫•t l∆∞·ª£ng kh√¥ng kh√≠',
        'H·ªô gia ƒë√¨nh c√≥ kh√¥ng gian s·ªëng r·ªông'
      ],
      keywords: [
        'qu·∫°t tu·∫ßn ho√†n',
        'LocknLock',
        'kh√¥ng kh√≠ s·∫°ch',
        'ti·∫øt ki·ªám ƒëi·ªán',
        'gia ƒë√¨nh'
      ],
      channelName: 'TechReview Channel',
      landingUrl: 'https://example.com/review/quat-tuan-hoan-locknlock'
    };
    
    // Generate post message with corrected format
    const postMessage = formatFacebookPost(testData);
    
    console.log('‚úÖ Corrected copyright format test completed');
    
    return NextResponse.json({
      success: true,
      testData,
      postMessage,
      message: 'Corrected copyright format test completed'
    });
    
  } catch (error) {
    console.error('‚ùå Exception in test new copyright:', error);
    return NextResponse.json({
      success: false,
      error: 'Test failed',
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 });
  }
}
